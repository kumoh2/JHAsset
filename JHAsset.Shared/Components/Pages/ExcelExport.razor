@page "/excel-export"
@inject IAssetService AssetService

<h3>엑셀 내보내기</h3>

<button @onclick="ExportToExcel">엑셀 다운로드</button>

@if (!string.IsNullOrEmpty(StatusMessage))
{
    <p>@StatusMessage</p>
}

@code {
    private string StatusMessage = "";

    private async Task ExportToExcel()
    {
        var assets = await AssetService.GetAllAsync();

        using var workbook = new ClosedXML.Excel.XLWorkbook();
        var ws = workbook.Worksheets.Add("Assets");
        ws.Cell(1,1).Value = "자산명";
        ws.Cell(1,2).Value = "대분류";
        ws.Cell(1,3).Value = "세부분류";
        ws.Cell(1,4).Value = "구매일";
        ws.Cell(1,5).Value = "가격";
        ws.Cell(1,6).Value = "자산번호";

        int row = 2;
        foreach (var a in assets)
        {
            ws.Cell(row,1).Value = a.Name;
            ws.Cell(row,2).Value = a.Category.ToString();
            ws.Cell(row,3).Value = a.SubCategory;
            ws.Cell(row,4).Value = a.PurchaseDate.ToString("yyyy-MM-dd");
            ws.Cell(row,5).Value = a.PurchasePrice;
            ws.Cell(row,6).Value = a.AssetNumber;
            row++;
        }

        using var ms = new MemoryStream();
        workbook.SaveAs(ms);
        ms.Position = 0;

        // 서버/MAUI 환경별 다운로드 방법이 다를 수 있음.
        // 여기서는 임시 파일 저장 예시
        var fileName = $"Assets_{DateTime.Now:yyyyMMddHHmmss}.xlsx";
        var filePath = Path.Combine(Path.GetTempPath(), fileName);
        await File.WriteAllBytesAsync(filePath, ms.ToArray());

        StatusMessage = $"엑셀 파일 저장: {filePath}";
    }
}
